# Generated by Django 5.2.5 on 2025-10-28 12:41

from django.db import migrations


def create_default_groups(apps, schema_editor):
    User = apps.get_model('auth', 'User')
    Notes = apps.get_model('dashboard', 'Notes')
    NotesGroup = apps.get_model('dashboard', 'NotesGroup')

    # For each user who has notes without a group, create a default group and assign notes to it
    users_with_notes = User.objects.filter(id__in=Notes.objects.filter(group__isnull=True).values_list('user_id', flat=True).distinct())
    for user in users_with_notes:
        group, created = NotesGroup.objects.get_or_create(user=user, name='Ungrouped', defaults={'description': 'Automatically created group for existing notes', 'color': 'secondary'})
        # assign all notes without group for this user to the created group
        Notes.objects.filter(user=user, group__isnull=True).update(group=group)


def remove_default_groups(apps, schema_editor):
    Notes = apps.get_model('dashboard', 'Notes')
    NotesGroup = apps.get_model('dashboard', 'NotesGroup')

    # Unset group for notes in 'Ungrouped' groups, then delete those groups
    ungrouped_groups = NotesGroup.objects.filter(name='Ungrouped')
    for grp in ungrouped_groups:
        Notes.objects.filter(group=grp).update(group=None)
    ungrouped_groups.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('dashboard', '0009_alter_notes_options_notesgroup_notes_group'),
    ]

    operations = [
        migrations.RunPython(create_default_groups, remove_default_groups),
    ]
